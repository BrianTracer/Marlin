############################################
#
#  Example steering file for Marlin
#  using the fast MC processor
#    
############################################

.begin Global  ---------------------------------------

# specify one ore more input files (in one ore more lines)

        #LCIOInputFiles simjob.slcio  
	#LCIOInputFiles ../simjob.slcio ../simjob1.slcio

	# the active processors that are called in the given order

	ActiveProcessors MyStdHepReader
	ActiveProcessors MySimpleFastMCProcessor
#------- AIDA processor has to come after SimpleFastMCProcessor !!
	ActiveProcessors MyAIDAProcessor 
	ActiveProcessors OutputFile

	# limit the number of processed records (run+evt):
	MaxRecordNumber 101

	# don't call the check method of the processors if "true"
      #	SupressCheck true
.end   -----------------------------------------------



.begin MyStdHepReader
ProcessorType StdHepReader
#---Processor that reads StdHep files as input and creates LCIO events from that.

#       input file
#        type:  [string]
#        default: input.stdhep
#        StdHepFileName  /afs/desy.de/group/it/ilcsoft/stdhep/muons_Theta4-176_1-10GeV.stdhep
#        StdHepFileName  /afs/desy.de/group/it/ilcsoft/stdhep/psihad_Theta20-160_5-100GeV.stdhep
        StdHepFileName   /afs/desy.de/group/it/ilcsoft/stdhep/tau_Theta20-90_10-200GeV.stdhep
.end -------------------------------------------------


.begin MySimpleFastMCProcessor
ProcessorType SimpleFastMCProcessor

.begin MySimpleFastMCProcessor
ProcessorType SimpleFastMCProcessor
#---SimpleFastMCProcessor creates ReconstrcutedParticles from MCParticles according to the resolution given in the steering file.

#       Resolution of charged particles in polar angle range:  dP/P  th_min  th_max
#        type:  [FloatVec]
#        default: 5e-05 0 1.5708
        ChargedResolution   5e-05 0 1.5708


#       Name of the MCParticle input collection
#        type:  [string]
#        default: MCParticle
        InputCollectionName   MCParticle


#       No reconstructed particles are produced for smaller momenta (in [GeV])
#        type:  [float]
#        default: 0.001
        MomentumCut   0.001


#       Resolution dE/E=A+B/sqrt(E/GeV) of neutral hadrons in polar angle range: A  B th_min  th_max
#        type:  [FloatVec]
#        default: 0.04 0.5 0 1.5708
        NeutralHadronResolution   0.04 0.5 0 1.5708


#       Resolution dE/E=A+B/sqrt(E/GeV) of photons in polar angle range: A  B th_min  th_max
#        type:  [FloatVec]
#        default: 0.01 0.1 0 1.5708
        PhotonResolution   0.01 .1 0 1.5708

.end -------------------------------------------------


.begin MyAIDAProcessor
ProcessorType AIDAProcessor
#---Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor

#        compression of output file 0: false >0: true (default)
#        type:  [int]
#        default: 1
        Compress   1


#        filename without extension
#        type:  [string]
#        default: aida_file
        FileName   aida_file


#        type of output file xml (default) or root ( only OpenScientist)
#        type:  [string]
#        default: xml
        FileType   xml

.end -------------------------------------------------


.begin MyCheckplots
ProcessorType Checkplots
#--- Default plots for arbitrary LCIO file. Produces clouds and histograms of all collections in the event (so far only MCParticle, SimCalorimeterHit, SimTrackerHit).

#        use fixed size 2d maps for tesla detector 0: false ; !=0 true
#        type:  [int]
#        default: 0
        UseTeslaMaps   1

.end -------------------------------------------------



.begin MyConditionsProcessor
ProcessorType ConditionsProcessor
#---ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using
LCCD

#       Initialization of a conditions database handler
#        type:  [StringVec]
#        example:
#       DBCondHandler   conditionsName /lccd/myfolder HEAD


#       Initialization of a conditions db file handler
#        type:  [StringVec]
#        example:
#       DBFileHandler   conditionsName conditions.slcio collectionName


#       Initialization string for conditions database
#        type:  [string]
#        default: localhost:lccd_test:calvin:hobbes
        DBInit   localhost:lccd_test:calvin:hobbes


#       Initialization of a data file handler
#        type:  [StringVec]
#        example:
#       DataFileHandler   conditionsName


#       Initialization of a simple conditions file handler
#        type:  [StringVec]
#        example:
#       SimpleFileHandler   conditionsName conditions.slcio collectionName

.end -------------------------------------------------

# the default output processor
.begin OutputFile  

	# mandatory processor type (the name of the class)
		ProcessorType LCIOOutputProcessor

	# the outputfile
		LCIOOutputFile marlin.slcio

	# lcio write mode, new overwrites existing files 
	# append appends to existing files 
	# if nothing specified create new file only if it doesn't exist
		LCIOWriteMode WRITE_NEW

	#LCIOWriteMode WRITE_APPEND

.end -------------------------------------------------


# a few testprocessors - no functionality realy
.begin FranksTestProcessor 

	ProcessorType TestProcessor

	parameter0   1  
	parameter1   4.30325e-34
	parameter2   2.0
	parameter3   3.3 
.end -------------------------------------------------



.begin AnotherTestProcessor

	ProcessorType TestProcessor

	parameter0   12
	parameter1   24
	parameter2   36
	parameter3   blabla bla bla
.end -------------------------------------------------



.begin AIDAFile
	ProcessorType AIDAProcessor

	# type of outputfile - xml (default) or root (only with OpenScientist)
		FileType xml

	FileName DefaultPlots

	# compress >-1-true (default) <0-false
	Compress 1

.end -------------------------------------------------
